<% title = 'Reglas' %> <!-- Establecer el título -->

<%- include('../partials/layoutsAdmin.ejs'); %> 

<body>
    <div class="wrapper"> 
        <%- include('../partials/sidebarAdmin.ejs'); %> 

        <div id="main-content" class="main p-3">
            <%- include('../partials/header.ejs'); %>

            <!-- contenido principal-->
            <div class="contenedor-dashboard">
                <h1 class="titulo-dashboard" id="tituloReglas">Reglas de Calificación</h1> <!-- Título fuera del dashboard -->

                <div class="fondo-dashboard">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th scope="col">Descripción</th>
                                <th scope="col">Puntos</th>
                                <th scope="col">Acciones</th>
                            </tr>
                        </thead>
                        <tbody id="rulesList">
                            <tr>
                                <td>Respuesta correcta</td>
                                <td class="editable" data-field="respuesta_correcta"><%= regla.respuesta_correcta %></td>
                                <td>
                                    <button class="btn btn-sm btn-warning edit-btn" data-id="<%= regla.id %>">Editar</button>
                                </td>
                            </tr>
                            <tr>
                                <td>Respuesta incorrecta</td>
                                <td class="editable" data-field="respuesta_incorrecta"><%= regla.respuesta_incorrecta %></td>
                                <td>
                                    <button class="btn btn-sm btn-warning edit-btn" data-id="<%= regla.id %>">Editar</button>
                                </td>
                            </tr>
                            <tr>
                                <td>Sin respuesta</td>
                                <td class="editable" data-field="sin_respuesta"><%= regla.sin_respuesta %></td>
                                <td>
                                    <button class="btn btn-sm btn-warning edit-btn" data-id="<%= regla.id %>">Editar</button>
                                </td>
                            </tr>
                            <tr>
                                <td>Puntaje máximo</td>
                                <td class="editable" data-field="puntaje_maximo"><%= regla.puntaje_maximo %></td>
                                <td>
                                    <button class="btn btn-sm btn-warning edit-btn" data-id="<%= regla.id %>">Editar</button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <h1 class="titulo-dashboard mt-5" id="tituloDuracion">Tiempo examen simulacro</h1> <!-- Título para duración -->

                <div class="fondo-dashboard">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th scope="col">Descripción</th>
                                <th scope="col">Tiempo (min)</th>
                                <th scope="col">Acciones</th>
                            </tr>
                        </thead>
                        <tbody id="durationList">
                            <tr>
                                <td>Duración total</td>
                                <td class="editable" data-field="tiempo_examen_simulacro"><%= regla.tiempo_examen_simulacro %></td>
                                <td>
                                    <button class="btn btn-sm btn-warning edit-btn" data-id="<%= regla.id %>">Editar</button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
    crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="/js/index.js"></script>
    <script type="module" src="/js/genericFunctions.js"></script>
    <script src="/js/user.js"></script>
    
    
    

    <script>
        // Manejador para edición y guardado
        document.querySelectorAll('.edit-btn').forEach(button => {
            button.addEventListener('click', async function () {
                const row = this.closest('tr');
                const editableCell = row.querySelector('.editable');
                const field = editableCell.getAttribute('data-field');
                const reglaId = this.getAttribute('data-id');

                if (this.innerText === 'Editar') {
                    const currentValue = editableCell.innerText.trim();

                    const input = document.createElement('input');
                    input.type = 'number';
                    input.value = currentValue;
                    input.className = 'form-control';

                    editableCell.innerHTML = '';
                    editableCell.appendChild(input);

                    this.innerText = 'Guardar';
                    this.classList.remove('btn-warning');
                    this.classList.add('btn-success');

                    // Guardar cambios al hacer clic en "Guardar"
                    this.addEventListener('click', async function save() {
                        const newValue = input.value.trim();
                        if (newValue === currentValue || newValue === '') {
                            editableCell.innerText = currentValue; // Restaurar el valor si no cambia
                        } else {
                            try {
                                const response = await fetch(`/reglas/${reglaId}`, {
                                    method: 'PUT',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({ [field]: newValue }),
                                });

                                if (!response.ok) throw new Error('Error al actualizar.');

                                editableCell.innerText = newValue; // Actualizar en la tabla
                            } catch (error) {
                                console.error(error);
                                alert('No se pudo guardar el cambio.');
                                editableCell.innerText = currentValue; // Restaurar el valor original
                            }
                        }

                        this.innerText = 'Editar';
                        this.classList.remove('btn-success');
                        this.classList.add('btn-warning');

                        this.removeEventListener('click', save);
                    }, { once: true });
                }
            });
        });
    </script>
</body>
