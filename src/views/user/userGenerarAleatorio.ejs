<% title = 'Generar Aleatorio' %> <!-- Establecer el título -->

<%- include('../partials/layoutsAdmin.ejs'); %>

<body>
    <div class="wrapper">
        <%- include('../partials/sidebarUser.ejs'); %>

        <div id="main-content" class="main p-3">
            <%- include('../partials/header.ejs'); %>
            <!-- contenido principal-->
            <div class="contenedor-dashboard">
                <h1 class="titulo-dashboard" id="tituloCurso">
                    Generar aleatorio<br>
                    <span class="texto-pequeño">Genera un examen según tus necesidades!</span>
                </h1>
                <div class="fondo-dashboard">
                    <!-- Formulario -->
                    <form id="randomForm" class="form-flex">
                        <div class="mb-3">
                            <label for="channel" class="form-label">Canal</label>
                            <select class="form-select" id="channel" required>
                                <option value="" disabled selected>Seleccione el canal</option>
                                <option value="1">1</option>
                                <option value="2">2</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="type" class="form-label">Examen</label>
                            <select class="form-select" id="examSelect" required>
                                <option value="" disabled selected>Seleccione el examen</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="mode" class="form-label">Modo</label>
                            <select class="form-select" id="mode" required>
                                <option value="" disabled>Seleccione el modo</option>
                                <option value="practico">Práctica</option>
                                <option value="simulacro" selected>Simulacro</option>
                            </select>
                        </div>
                    </form>

                    <!-- Botón fuera del formulario -->
                    <div class="text-center">
                        <button type="button" class="btn1" id="generateBtn">Generar Aleatorio</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Función para obtener los exámenes
        async function fetchExams() {
            try {
                const response = await fetch('/exams');
                const exams = await response.json();
                return exams;
            } catch (error) {
                console.error('Error al obtener los exámenes:', error);
            }
        }

        // Función para actualizar la lista de exámenes según el canal seleccionado
        function updateExams(exams, selectedChannel) {
            const examSelect = document.getElementById('examSelect');
            examSelect.innerHTML = '<option value="" disabled selected>Seleccione el examen</option>'; // Limpiar las opciones previas

            // Filtrar los exámenes por canal
            const filteredExams = exams.filter(exam => exam.canal == selectedChannel);

            // Mapear los tipos de examen
            const examTypeMapping = {
                1: "Fase 1",
                2: "Fase 2",
                3: "Cepu Verano I",
                4: "Cepu Verano II",
                5: "Cepu Otoño I",
                6: "Cepu Otoño II",
                7: "Cepu Invierno I",
                8: "Cepu Invierno II"
            };

            // Agregar los exámenes filtrados al select
            filteredExams.forEach(exam => {
                const option = document.createElement('option');
                option.value = exam.id_exam;
                option.textContent = `${examTypeMapping[exam.exam_type]}`;
                examSelect.appendChild(option);
            });
        }

        // Función para seleccionar un ID aleatorio que no sea el seleccionado
        function getRandomId(exams, selectedId) {
            const availableIds = exams.filter(exam => exam.id_exam !== parseInt(selectedId));
            const randomExam = availableIds[Math.floor(Math.random() * availableIds.length)];
            return randomExam.id_exam;
        }

        // Manejo del evento de cambio de canal
        document.getElementById('channel').addEventListener('change', async (event) => {
            const selectedChannel = event.target.value;
            if (selectedChannel) {
                const exams = await fetchExams(); // Obtener los exámenes
                updateExams(exams, selectedChannel); // Actualizar los exámenes según el canal seleccionado
            }
        });

        // Manejo del botón "Generar Aleatorio"
        document.getElementById('generateBtn').addEventListener('click', async () => {
            // Seleccionar los valores del formulario
            const channel = document.getElementById('channel').value;
            const exam = document.getElementById('examSelect').value;
            const mode = document.getElementById('mode').value;

            // Validar que todos los campos estén llenos
            if (!channel || !exam || !mode) {
                alert('Por favor, complete todos los campos antes de generar.');
                return;
            }

            // Obtener los exámenes para seleccionar uno aleatorio
            const exams = await fetchExams();

            // Seleccionar un ID aleatorio
            const randomExamId = getRandomId(exams, exam);

            // Determinar la URL del modo
            const url = mode === 'practico' ? `/userModoPractica/${randomExamId}` : `/userModoSimulacro/${randomExamId}`;

            // Hacer la solicitud POST
            try {
                // Redirigir a la URL construida
                window.location.href = url;  // Redirigir a la URL generada
            } catch (error) {
                console.error('Error al redirigir:', error);
            }
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
        crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="/js/index.js"></script>
    <script type="module" src="/js/genericFunctions.js"></script>
    <script src="/js/user.js"></script>
</body>
